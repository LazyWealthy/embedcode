<link href="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap" rel="stylesheet">

<body>
    <div id="container">
        <div id="wall" style="width: 100%; height: 100%; font-family: 'Open Sans', sans-serif; font-size: 28px; text-align: center;
               display: flex; align-items: center; justify-content: center;
               color: #00000000; background: #00000000; position: absolute;
               z-index: 2; overflow: auto; border-radius: 5px;">
            <div>Login for full access</div>
        </div>
        <iframe id="dashboard" style="display: none;" frameborder="0" allowfullscreen></iframe>
        <div id="noteBlock" style="display: none;">
            <b id="noteText" style="color: #999189; margin-right: 12px;"></b><span id="footer"></span>
        </div>
    </div>


    <style>
        html,
        body {
            margin: 0;
            padding: 0;
            overflow: hidden;
            font-family: 'Open Sans', sans-serif;
        }

        #noteText {
            text-indent: 0.5em;
            display: inline-block;
        }

        #wall::-webkit-scrollbar {
            -ms-overflow-style: none;
            scrollbar-width: none;
            display: none;
        }
    </style>

    <script>
        const container = document.getElementById("container");
        const dashboard = document.getElementById("dashboard");
        const noteBlock = document.getElementById("noteBlock");
        const noteText = document.getElementById("noteText");
        // const isMobile = /iPhone|Android/i.test(navigator.userAgent) && !/iPad|Tablet/i.test(navigator.userAgent) || window.innerWidth <= 330;
        const isMobile = /iPhone|Android/i.test(navigator.userAgent) || window.innerWidth <= 330;
        const deskSrc = "[$deskSrc]";
        const mobSrc = "[$mobSrc]";
        const titleText = "[$titleText]";
        const wallSwitch = "[$wallOnOff]";
        const langCode = "[$langCode]"
        const logoText = langCode == "zh" ? "懶人盯盤" : "LazyWealthy";
        const noteLabel = langCode == "zh" ? "注: " : "Note: ";
        const dFootnote = "[$dFootnote]";
        const mFootnote = "[$mFootnote]";
        const footnote = isMobile ? mFootnote : dFootnote;

        dashboard.title = titleText;

        if (!isMobile) {
            dashboard.src = deskSrc;
            dashboard.style.cssText = "display: block; width: [$dWidth]px; height: [$dHeight]px";
            dashboard.addEventListener("load", loadFooter());
        } else {
            dashboard.src = mobSrc;
            dashboard.style.cssText = "display: block; width: [$mWidth]px; height: [$mHeight]px";
            dashboard.addEventListener("load", loadFooter());
        }

        function loadFooter() {

            container.style.removeProperty("min-height");

            if (!isMobile) {
                noteBlock.style.cssText = "display: flex; width: 100%; height: auto; min-height: 20px; margin-left: 0px; background: #fff; color: #000; font-family: 'Open Sans', sans-serif; align-items: center; justify-content: left; font-size: 12px; position: absolute; bottom: 0; z-index: 999;";
                noteText.innerHTML = logoText;
                footer.innerHTML += dFootnote === "" ? "" : noteLabel + dFootnote;
            } else {
                noteBlock.style.cssText = "display: flex; width: 100%; height: auto; min-height: 20px; margin-top: 10px; background: #fff; color: #000; font-family: 'Open Sans', sans-serif; align-items: center; justify-content: left; font-size: 12px; overflow: visible;";
                noteText.innerHTML = logoText;
                footer.innerHTML += mFootnote === "" ? "" : noteLabel + mFootnote;
            }

        }

        // Section Break

        let isHovering = false;
        const wallDiv = document.getElementById("wall");

        if (wallSwitch === "on") {

            function popUp() {
                wallDiv.style.backgroundColor = "#00000070";
                wallDiv.style.color = "#ffffff";
                window.parent.postMessage(
                    { type: "showPopUp" },
                    "*"
                );
            }
        
            // Send a message to the parent
            window.parent.postMessage(
                { type: "requestStatus" },
                "*"
            );

            // Listen for parent’s reply
            window.addEventListener("message", (event) => {
                if (event.origin !== "https://www.lazywealthy.com") return;
                if (event.data.type === "statusResponse") {
                    const isLoggedIn = event.data.enabled;
                    if (isLoggedIn === "true") {
                        wallDiv.style.display = 'none';
                    }
                }
            });
                
        } else {
            wallDiv.style.display = 'none';
        } 


    </script>
</body>
